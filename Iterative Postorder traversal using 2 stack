class Solution {
    //Iterative Postorder traversal using 2 stack
    List<Integer> result;
    public List<Integer> postorderTraversal(TreeNode root) {
        result=new ArrayList<>();
        if(root==null)
        return result;
        
        Stack<TreeNode>st1=new Stack<>();
           Stack<TreeNode>st2=new Stack<>();
        st1.push(root);
        
        while(!st1.isEmpty())
        {
            root=st1.pop();
            st2.push(root);
            if(root.left!=null)
            {
                st1.push(root.left);
            }
            if(root.right!=null)
            {
                st1.push(root.right);
            }
            
        }
        while(!st2.isEmpty())
        {
            result.add(st2.pop().val);
        }
        return result;
    }
    
    
}
