class Solution {
    //Iterative Postorder traversal using 1 stack
    List<Integer> result;
    public List<Integer> postorderTraversal(TreeNode root) {
        result=new ArrayList<>();
        if(root==null)
        return result;
        
        Stack<TreeNode>st=new Stack<>();
         TreeNode pre=null;
        
        while(!st.isEmpty()||root!=null)
        {
            if(root!=null)
            {
                st.push(root);
                root=root.left;
            }else{
                root=st.peek();
                
                if(root.right==null||root.right==pre)
                {
                    result.add(root.val);
                    st.pop();
                    pre=root;
                    root=null;
                }else{
                    root=root.right;
                }
            }
        }
        return result;
    }
    
    
}
